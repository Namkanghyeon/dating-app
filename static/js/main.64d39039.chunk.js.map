{"version":3,"sources":["store/profileReducer.js","store/index.js","components/Navigation.js","fbase.js","pages/Login/index.js","components/Profile.js","pages/Main/FemaleHome.js","pages/Main/MaleHome.js","utils/authTest.js","pages/Main/index.js","pages/Matched/index.js","pages/MyPage/index.js","pages/MyPage/EditProfile.js","pages/MyPage/DeleteAccount.js","pages/Signup/index.js","pages/Signup/CreateProfile.js","Router.js","App.js","index.js"],"names":["SET_PROFILE","CLEAR_PROFILE","redux_setProfile","profileObj","type","initialState","persistConfig","key","storage","storageSession","whitelist","rootReducer","combineReducers","profileReducer","state","action","persistReducer","Navigation","menu_list","menu","path","icon","faSeedling","faHeart","faUser","need_navbar_paths","Set","location","useLocation","has","pathname","className","map","match","to","size","style","marginTop","nanoid","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","LogIn","navigate","useNavigate","useState","email","setEmail","password","setPassword","onChange","event","target","name","value","useEffect","onSubmit","preventDefault","signInWithEmailAndPassword","then","catch","e","code","alert","maxLength","placeholder","required","onClick","Profile","userObj","yourProfileObj","matchMode","detailMode","setDetailMode","like","setLike","ok","setOk","yourOk","setYourOk","useSelector","shallowEqual","liking","includes","id","matchedPartners","forEach","myPartner","yourPartner","uid","onLikeClick","a","gender","window","confirm","newFemaleMatchedPartners","push","updateDoc","doc","newLiking","newMatchedPartners","newLiked","liked","onOkClick","newMatchedPartner","toggleDetailMode","prev","age","school","src","attachmentUrl","maxWidth","maxHeight","alt","fontWeight","kakaoTalkId","introduce","FemaleHome","maleProfileObjs","setMaleProfileObjs","q","query","collection","where","unsubscribe","onSnapshot","snapshot","maleProfileArray","docs","data","maleProfileObj","MaleHome","femaleProfileObjs","setFemaleProfileObjs","femaleProfileArray","length","femaleProfileObj","AuthTest","currentUser","console","log","Home","undefined","Object","keys","Matched","matches","setMatches","myMatchedPartners","myMatchedPartnersIds","myMatchedPartner","documentId","matchArray","myProfileObj","MyPage","signOut","sessionStorage","clear","EditProfile","setName","setIntroduce","setKakaoTalkId","attachment","setAttachment","fileInput","useRef","dispatch","useDispatch","oldAttachmentRef","ref","deleteObject","newAttachmentRef","uploadString","response","getDownloadURL","newProfileObj","newProfileObjForRedux","current","defaultValue","minLength","htmlFor","faSyncAlt","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","DeleteAccount","reLogin","setReLogin","user","credential","EmailAuthProvider","reauthenticateWithCredential","deleteDoc","deleteUser","SignUp","passwordConfirm","setPasswordConfirm","createUserWithEmailAndPassword","error","CreateProfile","setGender","setAge","setSchool","redux_setProfileObj","attachmentRef","setDoc","marginRight","faPlus","faTimes","commonStyle","props","AppRouter","element","App","ready","setReady","setUserObj","callProfile","docRef","profileUnsubscribe","setPersistence","browserSessionPersistence","onAuthStateChanged","displayName","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.64d39039.chunk.js","sourcesContent":["// 액션 타입들\nconst SET_PROFILE = \"profileReducer/SET_PROFILE\";\nconst CLEAR_PROFILE = \"profileReducer/CLEAR_PROFILE\";\n\n// 액션 생성함수들\nexport const redux_setProfile = (profileObj) => {\n    return {\n        type: SET_PROFILE,\n        profileObj: profileObj,\n    };\n};\n\nexport const redux_clearProfile = () => {\n    return {\n        type: CLEAR_PROFILE,\n    };\n};\n\n// 초기 상태\nconst initialState = {\n    profileObj: {},\n};\n\n// 리듀서\nexport default function profileReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_PROFILE:\n            return {\n                ...state,\n                profileObj: action.profileObj,\n            };\n        case CLEAR_PROFILE:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { combineReducers } from 'redux';\n// 내 리듀서들\nimport profileReducer from './profileReducer';\n\n// Redux-persist: 리덕스에서 웹 스토리지에 접근할 수 있도록 해주는 라이브러리\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['profileReducer'], // 다른 리듀서 추가 시 whilelist에 추가\n};\n\nconst rootReducer = combineReducers({\n  profileReducer,\n  // 다른 리듀서들 여기에 등록\n});\n\n// export default rootReducer;\n// persist 사용하려면 대신 persistReducer에 config 같이 넣어서 사용\nexport default persistReducer(persistConfig, rootReducer);\n","import { Link, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSeedling, faHeart, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { nanoid } from 'nanoid';\n\nexport default function Navigation() {\n  const menu_list = [\n    { menu: 'Home', path: '/home', icon: faSeedling },\n    { menu: 'Matched', path: '/matched', icon: faHeart },\n    { menu: 'My Page', path: '/mypage', icon: faUser },\n  ];\n\n  const need_navbar_paths = new Set([\n    '/home',\n    '/matched',\n    '/mypage',\n    '/edit',\n    '/delete',\n  ]);\n\n  const location = useLocation();\n\n  const pathCheck = (match) => {\n    return match === location.pathname ? 'selected-menu' : 'navigation-menu';\n  };\n\n  return (\n    <>\n      {need_navbar_paths.has(location.pathname) && (\n        <nav className=\"container\">\n          <ul className=\"navigation-container\">\n            {menu_list.map((menu) => (\n              <li key={nanoid()} className={pathCheck(menu.path)}>\n                <Link to={menu.path} className=\"navigation-link\">\n                  <FontAwesomeIcon icon={menu.icon} size=\"3x\" />\n                  <span style={{ marginTop: 5 }}>{menu.menu}</span>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      )}\n    </>\n  );\n}\n","import { initializeApp } from \"@firebase/app\";\nimport { getAuth } from \"@firebase/auth\";\nimport { getFirestore } from \"@firebase/firestore\";\nimport { getStorage } from \"@firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import { authService } from 'fbase';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from '@firebase/auth';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\n\nexport default function LogIn() {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    signInWithEmailAndPassword(authService, email, password)\n      .then(() => {\n        navigate('/home');\n      })\n      .catch((e) => {\n        if (e.code === 'auth/user-not-found') {\n          alert('등록되지 않은 이메일입니다. 다시 한번 확인해 주세요.');\n        } else if (event.code === 'auth/wrong-password') {\n          alert('비밀번호가 틀립니다. 다시 한번 확인해 주세요.');\n          setPassword('');\n        } else if (e.code === 'auth/too-many-requests') {\n          alert(\n            '짧은 시간 동안 너무 많은 로그인 시도가 발생했습니다. 잠시 후에 다시 시도해 주세요.'\n          );\n        }\n      });\n  };\n\n  const onSignUp = () => {\n    navigate('/signup');\n  };\n\n  useEffect(() => {\n    return () => {\n      setEmail('');\n      setPassword('');\n    };\n  }, []);\n\n  return (\n    <div className=\"logInContainer\">\n      <span className=\"logInTitle\">\n        <FontAwesomeIcon icon={faSeedling} size=\"2x\" className=\"logInLogo\" />\n        <h2 className=\"logInServiceName\">데이팅앱</h2>\n      </span>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          maxLength=\"60\"\n          placeholder=\"이메일\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"logInInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          maxLength=\"20\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"logInInput\"\n        />\n        <input\n          type=\"submit\"\n          value={'로그인'}\n          className=\"logInInput logInButton\"\n        />\n      </form>\n      <form className=\"signUp\">\n        <button className=\"signUpButton\" onClick={onSignUp}>\n          회원가입\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport { doc, updateDoc } from '@firebase/firestore';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Profile({ userObj, yourProfileObj, matchMode }) {\n  const [detailMode, setDetailMode] = useState(false);\n  const [like, setLike] = useState(false);\n  const [ok, setOk] = useState(false);\n  const [yourOk, setYourOk] = useState(false);\n\n  const { profileObj } = useSelector(\n    (state) => ({\n      profileObj: state.profileReducer.profileObj,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (profileObj.liking.includes(yourProfileObj.id)) {\n      setLike(true);\n    }\n    const myPartners = profileObj.matchedPartners;\n    myPartners.forEach((myPartner) => {\n      if (myPartner.id === yourProfileObj.id) {\n        if (myPartner.ok) {\n          setOk(true);\n        }\n      }\n    });\n    const yourPartners = yourProfileObj.matchedPartners;\n    yourPartners.forEach((yourPartner) => {\n      if (yourPartner.id === userObj.uid) {\n        if (yourPartner.ok) {\n          setYourOk(true);\n        }\n      }\n    });\n  }, [userObj, profileObj, yourProfileObj]);\n\n  const onLikeClick = async (event) => {\n    event.preventDefault();\n    if (profileObj.gender === 'Male') {\n      if (\n        window.confirm(\n          '좋아요를 누르시겠어요? 서로의 사진이 공개되며, 되돌리기는 불가능합니다.'\n        )\n      ) {\n        const newFemaleMatchedPartners = yourProfileObj.matchedPartners;\n        newFemaleMatchedPartners.push({ id: userObj.uid, ok: false });\n        await updateDoc(doc(dbService, 'profiles', yourProfileObj.id), {\n          matchedPartners: newFemaleMatchedPartners,\n        });\n        const newLiking = profileObj.liking;\n        newLiking.push(yourProfileObj.id);\n        const newMatchedPartners = profileObj.matchedPartners;\n        newMatchedPartners.push({ id: yourProfileObj.id, ok: false });\n        await updateDoc(doc(dbService, 'profiles', userObj.uid), {\n          liking: newLiking,\n          matchedPartners: newMatchedPartners,\n        });\n        setLike(true);\n      }\n    } else {\n      if (\n        window.confirm(\n          '좋아요를 누르시겠어요? 상대방도 수락 시 서로의 사진이 공개되며, 되돌리기는 불가능합니다.'\n        )\n      ) {\n        const newLiked = yourProfileObj.liked;\n        newLiked.push(userObj.uid);\n        await updateDoc(doc(dbService, 'profiles', yourProfileObj.id), {\n          liked: newLiked,\n        });\n        const newLiking = profileObj.liking;\n        newLiking.push(yourProfileObj.id);\n        await updateDoc(doc(dbService, 'profiles', userObj.uid), {\n          liking: newLiking,\n        });\n        setLike(true);\n      }\n    }\n  };\n\n  const onOkClick = async () => {\n    if (\n      window.confirm(\n        '좋아요를 누르시겠어요? 상대방도 수락 시 서로의 카카오톡 아이디가 공개되며, 되돌리기는 불가능합니다.'\n      )\n    ) {\n      // const newMatchedPartners = myProfileObj.matchedPartners;\n      // newMatchedPartners.forEach((newMatchedPartner) => {\n      //   if (newMatchedPartner.id === yourProfileObj.id) {\n      //     newMatchedPartner.ok = true;\n      //   }\n      // });\n      const newMatchedPartners = profileObj.matchedPartners.map(\n        (newMatchedPartner) => {\n          if (newMatchedPartner.id === yourProfileObj.id) {\n            newMatchedPartner.ok = true;\n          }\n          return newMatchedPartner;\n        }\n      );\n      await updateDoc(doc(dbService, 'profiles', userObj.uid), {\n        matchedPartners: newMatchedPartners,\n      });\n      setOk(true);\n    }\n  };\n\n  const toggleDetailMode = () => {\n    setDetailMode((prev) => !prev);\n  };\n\n  return (\n    <div\n      className={`${\n        like ? `${ok && yourOk ? 'loveBox' : 'selectedBox'}` : 'box'\n      }`}\n    >\n      <h4>\n        {yourProfileObj.name}({yourProfileObj.age}) / {yourProfileObj.school}\n      </h4>\n      {detailMode ? (\n        <>\n          {matchMode ? (\n            <>\n              <img\n                src={yourProfileObj.attachmentUrl}\n                style={{\n                  maxWidth: '200px',\n                  maxHeight: '200px',\n                }}\n                alt=\"\"\n                className=\"profilePicture\"\n              />\n              {!ok ? (\n                <button onClick={onOkClick} className=\"loveButton\">\n                  <FontAwesomeIcon icon={faHeart} size=\"2x\" />\n                </button>\n              ) : (\n                <>\n                  {yourOk ? (\n                    <>\n                      <h4>매칭 완료</h4>\n                      <h4 className=\"kakaoIdBox\">\n                        <span style={{ fontWeight: 800 }}>\n                          {yourProfileObj.name}님의 카카오톡 ID\n                        </span>\n                        <br />\n                        {yourProfileObj.kakaoTalkId}\n                      </h4>\n                    </>\n                  ) : (\n                    <div>\n                      {yourProfileObj.name}님의 응답을\n                      <br />\n                      기다리는 중입니다.\n                    </div>\n                  )}\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <h5 className=\"introduceBox\">{yourProfileObj.introduce}</h5>\n              {!like ? (\n                <button onClick={onLikeClick} className=\"likeButton\">\n                  <FontAwesomeIcon icon={faHeart} size=\"2x\" />\n                </button>\n              ) : (\n                <h5>좋아요!</h5>\n              )}\n            </>\n          )}\n          <form>\n            <input\n              type=\"button\"\n              value=\"간략히\"\n              onClick={toggleDetailMode}\n              className=\"detailButton\"\n            />\n          </form>\n        </>\n      ) : (\n        <form>\n          <input\n            type=\"button\"\n            value=\"자세히\"\n            onClick={toggleDetailMode}\n            className=\"detailButton\"\n          />\n        </form>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport { collection, where, onSnapshot, query } from '@firebase/firestore';\nimport Profile from 'components/Profile';\n\nexport default function FemaleHome({ userObj }) {\n  const [maleProfileObjs, setMaleProfileObjs] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, 'profiles'),\n      where('gender', '==', 'Male')\n    );\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const maleProfileArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMaleProfileObjs(maleProfileArray);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div>\n      {maleProfileObjs.map((maleProfileObj) => (\n        <Profile\n          key={maleProfileObj.id}\n          userObj={userObj}\n          yourProfileObj={maleProfileObj}\n          matchMode={false}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport { collection, where, onSnapshot, query } from '@firebase/firestore';\nimport Profile from 'components/Profile';\n\nexport default function MaleHome({ userObj }) {\n  const [femaleProfileObjs, setFemaleProfileObjs] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(dbService, 'profiles'),\n      where('gender', '==', 'Female'),\n      where('liking', 'array-contains', userObj.uid)\n    );\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const femaleProfileArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setFemaleProfileObjs(femaleProfileArray);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [userObj]);\n\n  return (\n    <div>\n      {femaleProfileObjs.length === 0 && (\n        <h2 className=\"noMatchMessage\">\n          * 아직 받은 1차 매칭신청이 없습니다 *\n        </h2>\n      )}\n      {femaleProfileObjs.map((femaleProfileObj) => (\n        <Profile\n          key={femaleProfileObj.id}\n          userObj={userObj}\n          yourProfileObj={femaleProfileObj}\n          matchMode={false}\n        />\n      ))}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from 'fbase';\n\nexport default function AuthTest() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (authService.currentUser === null) {\n      console.log('Invalid Access');\n      navigate('/');\n    }\n  }, []);\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport FemaleHome from 'pages/Main/FemaleHome';\nimport MaleHome from 'pages/Main/MaleHome';\nimport { useNavigate } from 'react-router-dom';\nimport AuthTest from 'utils/authTest';\n\nexport default function Home({ userObj }) {\n  AuthTest();\n  const navigate = useNavigate();\n\n  const { profileObj } = useSelector(\n    (state) => ({\n      profileObj: state.profileReducer.profileObj,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (profileObj === undefined) {\n      // 회원가입 후 프로필 생성 안하면 undefined로 설정됨\n      navigate('/create');\n    }\n  }, [profileObj]);\n\n  return (\n    <div className=\"container\">\n      {profileObj && Object.keys(profileObj).length ? (\n        <>\n          {profileObj.gender === 'Female' ? (\n            <FemaleHome userObj={userObj} />\n          ) : (\n            <MaleHome userObj={userObj} />\n          )}\n        </>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport {\n  collection,\n  onSnapshot,\n  query,\n  where,\n  documentId,\n} from '@firebase/firestore';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport Profile from 'components/Profile';\nimport AuthTest from 'utils/authTest';\n\nexport default function Matched({ userObj }) {\n  AuthTest();\n  const [matches, setMatches] = useState([]);\n\n  const { profileObj } = useSelector(\n    (state) => ({\n      profileObj: state.profileReducer.profileObj,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let unsubscribe = null;\n    if (\n      profileObj &&\n      Object.keys(profileObj).length &&\n      profileObj.matchedPartners.length !== 0\n    ) {\n      const myMatchedPartners = profileObj.matchedPartners;\n      let myMatchedPartnersIds = [];\n      for (let myMatchedPartner of myMatchedPartners) {\n        myMatchedPartnersIds.push(myMatchedPartner.id);\n      }\n      if (myMatchedPartnersIds.length !== 0) {\n        const q = query(\n          collection(dbService, 'profiles'),\n          where(documentId(), 'in', myMatchedPartnersIds)\n        );\n        unsubscribe = onSnapshot(q, (snapshot) => {\n          const matchArray = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n          setMatches(matchArray);\n        });\n      }\n    }\n    if (unsubscribe) {\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [profileObj]);\n\n  return (\n    <div className=\"container\">\n      {matches.length === 0 && (\n        <h2 className=\"noMatchMessage\">* 아직 매칭된 상대가 없습니다 *</h2>\n      )}\n      {matches.map((match) => (\n        <Profile\n          key={match.id}\n          userObj={userObj}\n          myProfileObj={profileObj}\n          yourProfileObj={match}\n          matchMode={true}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { authService } from 'fbase';\nimport { useNavigate } from 'react-router-dom';\nimport AuthTest from 'utils/authTest';\n\nexport default function MyPage() {\n  AuthTest();\n  const navigate = useNavigate();\n\n  const onClick = (e) => {\n    switch (e.target.value) {\n      case 'edit':\n        navigate('/edit');\n        break;\n      case 'logout':\n        if (window.confirm('로그아웃하시겠습니까?')) {\n          authService.signOut();\n          window.sessionStorage.clear();\n          navigate('/');\n        }\n        break;\n      case 'delete':\n        navigate('/delete');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"myPageButtons\">\n        <button onClick={onClick} value=\"edit\" className=\"myPageButtonsChild\">\n          내 프로필 조회 / 수정\n        </button>\n        <button onClick={onClick} value=\"logout\" className=\"myPageButtonsChild\">\n          로그아웃\n        </button>\n        <button onClick={onClick} value=\"delete\" className=\"myPageButtonsChild\">\n          회원 탈퇴\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { doc, updateDoc } from '@firebase/firestore';\nimport {\n  ref,\n  uploadString,\n  getDownloadURL,\n  deleteObject,\n} from '@firebase/storage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { redux_setProfile } from 'store/profileReducer';\nimport { nanoid } from 'nanoid';\nimport AuthTest from 'utils/authTest';\n\nexport default function EditProfile({ userObj, profileObj }) {\n  AuthTest();\n  const navigate = useNavigate();\n\n  const [name, setName] = useState('');\n  const [introduce, setIntroduce] = useState('');\n  const [kakaoTalkId, setKakaoTalkId] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const fileInput = useRef();\n\n  useEffect(() => {\n    if (profileObj) {\n      setName(profileObj.name);\n      setIntroduce(profileObj.introduce);\n      setKakaoTalkId(profileObj.kakaoTalkId);\n      setAttachment(profileObj.attachmentUrl);\n    }\n  }, [profileObj]);\n\n  const dispatch = useDispatch();\n  const redux_setProfileObj = (_profileObj) =>\n    dispatch(redux_setProfile(_profileObj));\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (name === '') {\n      alert('이름을 입력해주세요.');\n    } else if (name.length < 2) {\n      alert('2자 이상의 이름을 입력해주세요.');\n    } else if (introduce === '') {\n      alert('자기소개를 입력해주세요.');\n    } else if (kakaoTalkId === '') {\n      alert('카카오톡 아이디를 입력해주세요.');\n    } else if (kakaoTalkId.length < 4) {\n      alert('정확한 카카오톡 아이디를 입력해주세요.');\n    } else if (window.confirm('프로필을 수정하시겠습니까?')) {\n      let attachmentUrl = profileObj.attachmentUrl;\n\n      if (attachment !== attachmentUrl) {\n        const oldAttachmentRef = ref(storageService, profileObj.attachmentUrl);\n        await deleteObject(oldAttachmentRef);\n        const newAttachmentRef = ref(\n          storageService,\n          `${userObj.uid}/${nanoid()}`\n        );\n        const response = await uploadString(\n          newAttachmentRef,\n          attachment,\n          'data_url'\n        );\n        attachmentUrl = await getDownloadURL(response.ref);\n      }\n\n      const newProfileObj = {\n        name: name,\n        introduce: introduce,\n        kakaoTalkId: kakaoTalkId,\n        attachmentUrl: attachmentUrl,\n      };\n\n      const newProfileObjForRedux = {\n        ...profileObj,\n        name: name,\n        introduce: introduce,\n        kakaoTalkId: kakaoTalkId,\n        attachmentUrl: attachmentUrl,\n      };\n\n      redux_setProfileObj(newProfileObjForRedux);\n\n      await updateDoc(doc(dbService, 'profiles', userObj.uid), newProfileObj);\n      setAttachment('');\n      fileInput.current.value = '';\n      navigate('/home');\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'introduce') {\n      setIntroduce(value);\n    } else {\n      setKakaoTalkId(value);\n    }\n  };\n\n  const onPhotoChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const file = files[0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"profileComponents\">\n        <div>\n          <h3 className=\"profileSubtitle\">이름</h3>\n          <input\n            type=\"text\"\n            maxLength=\"20\"\n            name=\"name\"\n            //value={name}\n            defaultValue={name}\n            onChange={onChange}\n            className=\"profileInput\"\n          />\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">자기소개</h3>\n          <div className=\"profileInputWithoutIndent\">\n            <textarea\n              type=\"text\"\n              maxLength=\"400\"\n              name=\"introduce\"\n              //value={introduce}\n              defaultValue={introduce}\n              onChange={onChange}\n              className=\"profileIntroduce \"\n            />\n            <span className=\"profileIntroduceCount\">\n              {introduce.length}/400\n            </span>\n          </div>\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">카카오톡 아이디</h3>\n          <input\n            type=\"text\"\n            minLength=\"4\"\n            maxLength=\"20\"\n            name=\"kakaoTalkId\"\n            //value={kakaoTalkId}\n            defaultValue={kakaoTalkId}\n            onChange={onChange}\n            className=\"profileInput\"\n          />\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">사진</h3>\n        </div>\n        <label htmlFor=\"attach-file\" className=\"profileLabel\">\n          <span>사진 변경</span>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </label>\n        <input\n          accept=\"image/*\"\n          onChange={onPhotoChange}\n          ref={fileInput}\n          id=\"attach-file\"\n          type=\"file\"\n          style={{\n            opacity: 0,\n          }}\n        />\n        <div className=\"profileAttachment\">\n          <img src={attachment} alt=\"\" />\n        </div>\n        <input type=\"submit\" value=\"수정\" className=\"profileButton\" />\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService, dbService, storageService } from 'fbase';\nimport {\n  deleteUser,\n  reauthenticateWithCredential,\n  EmailAuthProvider,\n} from '@firebase/auth';\nimport { doc, deleteDoc } from '@firebase/firestore';\nimport { ref, deleteObject } from '@firebase/storage';\nimport AuthTest from 'utils/authTest';\n\nexport default function DeleteAccount({ userObj, profileObj }) {\n  AuthTest();\n  const navigate = useNavigate();\n\n  const [reLogin, setReLogin] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    return () => {\n      setReLogin(false);\n      setEmail('');\n      setPassword('');\n    };\n  }, []);\n\n  const onYesClick = () => setReLogin(true);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (event.target.value === 'no') {\n      navigate('/home');\n    } else {\n      const user = authService.currentUser;\n      const credential = EmailAuthProvider.credential(email, password);\n      await reauthenticateWithCredential(user, credential)\n        .then(async () => {\n          try {\n            await deleteObject(ref(storageService, profileObj.attachmentUrl));\n          } catch (e) {}\n          await deleteDoc(doc(dbService, 'profiles', userObj.uid));\n          await deleteUser(authService.currentUser);\n          window.sessionStorage.clear();\n          navigate('/');\n        })\n        .catch((e) => {\n          if (\n            e.code === 'auth/user-mismatch' ||\n            e.code === 'auth/wrong-password'\n          ) {\n            alert('로그인 정보가 바르지 않습니다.');\n            setEmail('');\n            setPassword('');\n          }\n        });\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <div>\n      {reLogin ? (\n        <div>\n          <h2 className=\"title\">계정 정보 확인</h2>\n          <div className=\"logInContainer\">\n            <form onSubmit={onSubmit} className=\"container\">\n              <input\n                name=\"email\"\n                type=\"email\"\n                maxLength=\"60\"\n                placeholder=\"이메일\"\n                required\n                value={email}\n                onChange={onChange}\n                className=\"logInInput\"\n              />\n              <input\n                name=\"password\"\n                type=\"password\"\n                maxLength=\"20\"\n                placeholder=\"비밀번호\"\n                required\n                value={password}\n                onChange={onChange}\n                className=\"logInInput\"\n              />\n              <input\n                type=\"submit\"\n                value={'계정 삭제'}\n                className=\"logInInput logInButton\"\n              />\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"deleteConfirmBox\">\n            <ul>계정을 삭제하시겠습니까?</ul>\n          </div>\n          <div className=\"deleteAccountButtons\">\n            <button\n              value=\"yes\"\n              onClick={onYesClick}\n              className=\"deleteYesButton\"\n            >\n              네\n            </button>\n            <button value=\"no\" onClick={onSubmit} className=\"deleteNoButton\">\n              다시 생각해볼게요\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'passwordConfirm') {\n      setPasswordConfirm(value);\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (password === passwordConfirm) {\n      createUserWithEmailAndPassword(authService, email, password)\n        .then(() => {\n          navigate('/create');\n        })\n        .catch((error) => {\n          if (error.code === 'auth/email-already-in-use') {\n            alert('이미 사용 중인 이메일입니다.');\n          } else if (error.code === 'auth/weak-password') {\n            alert('비밀번호는 최소 여섯 자리여야 합니다.');\n            setPassword('');\n            setPasswordConfirm('');\n          }\n        });\n    } else {\n      alert('두 비밀번호가 일치하지 않습니다.');\n      setPassword('');\n      setPasswordConfirm('');\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"logInContainer\">\n      <input\n        name=\"email\"\n        type=\"email\"\n        maxLength=\"60\"\n        placeholder=\"이메일\"\n        required\n        value={email}\n        onChange={onChange}\n        className=\"logInInput\"\n      />\n      <input\n        name=\"password\"\n        type=\"password\"\n        maxLength=\"20\"\n        placeholder=\"비밀번호 (6-20자)\"\n        required\n        value={password}\n        onChange={onChange}\n        className=\"logInInput\"\n      />\n      <input\n        name=\"passwordConfirm\"\n        type=\"password\"\n        maxLength=\"20\"\n        placeholder=\"비밀번호 확인\"\n        required\n        value={passwordConfirm}\n        onChange={onChange}\n        className=\"logInInput\"\n      />\n      <input\n        type=\"submit\"\n        value={'회원가입'}\n        className=\"logInInput logInButton\"\n      />\n    </form>\n  );\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { doc, setDoc } from '@firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faSyncAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { redux_setProfile } from 'store/profileReducer';\nimport { nanoid } from 'nanoid';\nimport AuthTest from 'utils/authTest';\n\nexport default function CreateProfile({ userObj }) {\n  AuthTest();\n  const navigate = useNavigate();\n\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('');\n  const [age, setAge] = useState('20');\n  const [school, setSchool] = useState('한양대');\n  const [introduce, setIntroduce] = useState('');\n  const [kakaoTalkId, setKakaoTalkId] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const fileInput = useRef();\n\n  const dispatch = useDispatch();\n  const redux_setProfileObj = (profileObj) =>\n    dispatch(redux_setProfile(profileObj));\n\n  const { profileObj } = useSelector(\n    (state) => ({\n      profileObj: state.profileReducer.profileObj,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // 로그인 직후 잠깐 undefined가 들어오는 경우가 있음\n    if (profileObj) {\n      navigate('/home');\n    }\n  }, [profileObj]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (name === '') {\n      alert('이름을 입력해주세요.');\n    } else if (name.length < 2) {\n      alert('2자 이상의 이름을 입력해주세요.');\n    } else if (gender === '') {\n      alert('성별을 선택해주세요.');\n    } else if (introduce === '') {\n      alert('자기소개를 입력해주세요.');\n    } else if (kakaoTalkId === '') {\n      alert('카카오톡 아이디를 입력해주세요.');\n    } else if (kakaoTalkId.length < 4) {\n      alert('정확한 카카오톡 아이디를 입력해주세요.');\n    } else if (attachment === '') {\n      alert('사진을 등록해주세요.');\n    } else {\n      let attachmentUrl = '';\n      if (attachment !== '') {\n        const attachmentRef = ref(storageService, `${userObj.uid}/${nanoid()}`);\n        const response = await uploadString(\n          attachmentRef,\n          attachment,\n          'data_url'\n        );\n        attachmentUrl = await getDownloadURL(response.ref);\n      }\n\n      const newProfileObj = {\n        name: name,\n        gender: gender,\n        age: age,\n        school: school,\n        introduce: introduce,\n        kakaoTalkId: kakaoTalkId,\n        attachmentUrl: attachmentUrl,\n        // 매칭 관련\n        liking: [], // 여성 유저용\n        liked: [], // 남성 유저용\n        matchedPartners: [],\n      };\n      redux_setProfileObj(newProfileObj);\n      await setDoc(doc(dbService, 'profiles', userObj.uid), newProfileObj);\n      setAttachment('');\n      navigate('/home');\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'gender':\n        setGender(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      case 'school':\n        setSchool(value);\n        break;\n      case 'introduce':\n        setIntroduce(value);\n        break;\n      case 'kakaoTalkId':\n        setKakaoTalkId(value);\n        break;\n      default:\n    }\n  };\n\n  const onPhotoChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const file = files[0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment('');\n    fileInput.current.value = '';\n  };\n\n  return (\n    <div className=\"container create-profile\">\n      <h2 className=\"profileTitle\">프로필 생성</h2>\n      <form onSubmit={onSubmit} className=\"profileComponents\">\n        <div>\n          <h3 className=\"profileSubtitle\">이름</h3>\n          <input\n            type=\"text\"\n            maxLength=\"20\"\n            name=\"name\"\n            onChange={onChange}\n            className=\"profileInput\"\n          />\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">성별</h3>\n          <div className=\"profileGender\">\n            <input\n              type=\"radio\"\n              value=\"Male\"\n              name=\"gender\"\n              onChange={onChange}\n            />{' '}\n            <span style={{ marginRight: '10px' }}>남자</span>\n            <input\n              type=\"radio\"\n              value=\"Female\"\n              name=\"gender\"\n              onChange={onChange}\n            />{' '}\n            <span>여자</span>\n          </div>\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">나이</h3>\n          <select name=\"age\" onChange={onChange} className=\"profileInput\">\n            <option value=\"20\"> 20 </option>\n            <option value=\"21\"> 21 </option>\n            <option value=\"22\"> 22 </option>\n            <option value=\"23\"> 23 </option>\n            <option value=\"24\"> 24 </option>\n            <option value=\"25\"> 25 </option>\n            <option value=\"26\"> 26 </option>\n            <option value=\"27\"> 27 </option>\n            <option value=\"28\"> 28 </option>\n            <option value=\"29\"> 29</option>\n          </select>\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">학교</h3>\n          <select name=\"school\" onChange={onChange} className=\"profileInput\">\n            <option value=\"한양대\"> 한양대 </option>\n            <option value=\"한양여대\"> 한양여대 </option>\n          </select>\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">자기소개</h3>\n          <div className=\"profileInputWithoutIndent\">\n            <textarea\n              type=\"text\"\n              maxLength=\"400\"\n              name=\"introduce\"\n              placeholder=\"관심사, 취미, 좋아하는 것, 연애 가치관 등을 적어주세요! (최대 400자)&#13;&#10;성의있게 작성할 수록 매칭 확률도 높아지겠죠?\"\n              onChange={onChange}\n              className=\"profileIntroduce\"\n            />\n            <span className=\"profileIntroduceCount\">\n              {introduce.length}/400\n            </span>\n          </div>\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">카카오톡 아이디</h3>\n          <input\n            type=\"text\"\n            maxLength=\"20\"\n            name=\"kakaoTalkId\"\n            onChange={onChange}\n            className=\"profileInput\"\n          />\n        </div>\n        <div>\n          <h3 className=\"profileSubtitle\">사진</h3>\n        </div>\n        <label htmlFor=\"attach-file\" className=\"profileLabel\">\n          {!attachment ? (\n            <div>\n              <span>사진 추가</span>\n              <FontAwesomeIcon icon={faPlus} />\n            </div>\n          ) : (\n            <div>\n              <span>사진 변경</span>\n              <FontAwesomeIcon icon={faSyncAlt} />\n            </div>\n          )}\n        </label>\n        <input\n          accept=\"image/*\"\n          onChange={onPhotoChange}\n          ref={fileInput}\n          id=\"attach-file\"\n          type=\"file\"\n          style={{\n            opacity: 0,\n          }}\n        />\n        {attachment && (\n          <div className=\"profileAttachment\">\n            <img src={attachment} alt=\"\" />\n            <div className=\"profileLabel\" onClick={onClearAttachment}>\n              <span style={{ marginTop: 5 }}>사진 제거</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n        <input type=\"submit\" value=\"생성\" className=\"profileButton\" />\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport Navigation from 'components/Navigation';\nimport LogIn from 'pages/Login';\nimport Home from 'pages/Main';\nimport Matched from 'pages/Matched';\nimport MyPage from 'pages/MyPage';\nimport EditProfile from 'pages/MyPage/EditProfile';\nimport DeleteAccount from 'pages/MyPage/DeleteAccount';\nimport SignUp from 'pages/Signup';\nimport CreateProfile from 'pages/Signup/CreateProfile';\n\nconst commonStyle = (props) => {\n  return (\n    <div className=\"outline\" style={{ marginTop: '80px' }}>\n      {props}\n    </div>\n  );\n};\n\nconst AppRouter = ({ userObj }) => {\n  const { profileObj } = useSelector(\n    (state) => ({\n      profileObj: state.profileReducer.profileObj,\n    }),\n    shallowEqual\n  );\n\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Routes>\n        <Route path=\"/\" element={commonStyle(<LogIn />)} />\n        <Route path=\"/home\" element={commonStyle(<Home userObj={userObj} />)} />\n        <Route\n          path=\"/matched\"\n          element={commonStyle(<Matched userObj={userObj} />)}\n        />\n        <Route path=\"/mypage\" element={commonStyle(<MyPage />)} />\n        <Route path=\"/signup\" element={commonStyle(<SignUp />)} />\n        <Route\n          path=\"/create\"\n          element={commonStyle(<CreateProfile userObj={userObj} />)}\n        />\n        <Route\n          path=\"/edit\"\n          element={commonStyle(\n            <EditProfile userObj={userObj} profileObj={profileObj} />\n          )}\n        />\n        <Route\n          path=\"/delete\"\n          element={commonStyle(\n            <DeleteAccount userObj={userObj} profileObj={profileObj} />\n          )}\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'Router'; // 내 router\nimport { authService, dbService } from 'fbase';\nimport { setPersistence, browserSessionPersistence } from '@firebase/auth';\nimport { doc, onSnapshot } from '@firebase/firestore';\nimport { useDispatch } from 'react-redux';\nimport { redux_setProfile } from 'store/profileReducer'; // 내 reducer의 action function\n\nexport default function App() {\n  const [ready, setReady] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const dispatch = useDispatch();\n  const redux_setProfileObj = (profileObj) =>\n    dispatch(redux_setProfile(profileObj));\n\n  const callProfile = (user) => {\n    const docRef = doc(dbService, 'profiles', user.uid);\n    const unsubscribe = onSnapshot(docRef, (snapshot) => {\n      redux_setProfileObj(snapshot.data()); // 회원가입 후 프로필 생성 없으면 undefined가 저장됨\n    });\n    return unsubscribe;\n  };\n\n  useEffect(() => {\n    let profileUnsubscribe = null;\n    setPersistence(authService, browserSessionPersistence); // 세션 종료 시 인증 해제 (로그 아웃)\n    const unsubscribe = authService.onAuthStateChanged((user) => {\n      //새로고침하면 다시 호출됨\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n        profileUnsubscribe = callProfile(user);\n      } else {\n        setUserObj(null);\n      }\n      setReady(true);\n    });\n    return () => {\n      if (profileUnsubscribe) {\n        profileUnsubscribe();\n      }\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <>\n      {ready ? (\n        <AppRouter userObj={userObj} />\n      ) : (\n        <div style={{ marginTop: 20 }}>loading...</div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"store\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"App\";\nimport \"styles/public.css\";\nimport \"styles/style.css\";\nimport \"styles/navigation.css\";\nimport \"styles/profile.css\";\nimport \"styles/login.css\";\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // redux dev tool용\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}